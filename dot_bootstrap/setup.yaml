---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  # vars:
  #   flyctl_version: "0.1.130"
  #   pulumi_version: "v3.94.2"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install base packages
      ansible.builtin.apt:
        name:
          - htop
          - atop
          - iftop
          - vim-tiny
          - zsh
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - gnupg
          - lsb-release
          - flatpak
          - qt5ct
          - qt6ct 
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    # # ---- VS Code ----
    # - name: Download Microsoft GPG key and dearmor
    #   ansible.builtin.shell: |
    #     wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /tmp/microsoft.gpg
    #     install -D -o root -g root -m 644 /tmp/microsoft.gpg /usr/share/keyrings/microsoft.gpg
    #     rm -f /tmp/microsoft.gpg
    #   args:
    #     creates: /usr/share/keyrings/microsoft.gpg
    #   become: true
    
    # - name: Add Visual Studio Code sources file
    #   ansible.builtin.copy:
    #     dest: /etc/apt/sources.list.d/vscode.sources
    #     content: |
    #       Types: deb
    #       URIs: https://packages.microsoft.com/repos/code
    #       Suites: stable
    #       Components: main
    #       Architectures: amd64,arm64,armhf
    #       Signed-By: /usr/share/keyrings/microsoft.gpg
    #     owner: root
    #     group: root
    #     mode: '0644'
    #   become: true

    # - name: Install VS Code
    #   ansible.builtin.apt:
    #     name: code
    #     state: present
    #     update_cache: true

    # # ---- Docker ----
    # - name: Add Docker GPG key
    #   ansible.builtin.get_url:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     dest: /usr/share/keyrings/docker-archive-keyring.gpg
    #     mode: "0644"

    # - name: Add Docker repository
    #   ansible.builtin.apt_repository:
    #     repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    #     state: present
    #     filename: docker

    # - name: Install Docker packages
    #   ansible.builtin.apt:
    #     name:
    #       - docker-ce
    #       - docker-ce-cli
    #       - containerd.io
    #       - docker-buildx-plugin
    #       - docker-compose-plugin
    #     state: present
    #     update_cache: true

    # - name: Add Docker group
    #   ansible.builtin.group:
    #     name: docker
    #     state: present

    # - name: Add user to docker group
    #   ansible.builtin.user:
    #     name: "{{ remote_regular_user }}"
    #     groups: docker
    #     append: true

    # ---- Flatpak ----
    - name: Add Flathub remote (system-wide)
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: system

    - name: Install Flatpak packages (system-wide)
      community.general.flatpak:
        name:
          - com.obsproject.Studio
          - org.videolan.VLC
          - org.tenacityaudio.Tenacity
          - md.obsidian.Obsidian
          - org.gimp.GIMP
          - rest.insomnia.Insomnia
          - com.github.johnfactotum.Foliate
          - org.gnome.meld
          - org.sqlitebrowser.sqlitebrowser
        state: present
        method: system

    # ---- Fonts ----
    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "/home/{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"
